set test "config"

set file "$bindir/x86-linux-gnu-echo"

set etc [exec opam config var etc]

proc match {file format extra_opts expectations} {
    set opts [subst { "--dump=$format:$file.out" "$extra_opts" } ]
    set opts [join $opts " "]
    eval exec bap $file $opts
    set matched false
    foreach {pat act} $expectations {
        if {$pat == "default"} {
            continue
        } else {
            set got [collect-matching $file $pat]
            set matches [llength $got]
            if { $matches != 0} {
                set matched true
                uplevel 1 $act
            }
        }
    }
    if {$matched == false} {
        foreach {pat act} $expectations {
            if {$pat == "default"} {
                uplevel 1 $act
            }
        }
    }
    exec rm "$file.out"
}


set confdir "$etc/bap"
set conf_file $confdir/config

set user_conf_exists false
set user_conf_file [exec mktemp]

if [file exists $conf_file] {
    set user_conf_exists true
    exec cp $conf_file $user_conf_file
}

exec mkdir -p $confdir
exec echo "
# this is a testing configuration file
# if you found it in your system, then report a bug to
# https://github.com/BinaryAnalysisPlatform/bap/issues

print-symbol = print_strings # this is an example of parameter

# the end of file

" > $conf_file

match $file bir "" {
    "sub main" {fail "$test: main is unexpected because not set in conf file"}
    "sub print_strings" {pass "$test for reading parameters from conf file"}
    default {fail "no output or wrong one is for $test"}
}

match $file bir "--print-symbol=main" {
    "sub print_strings" { fail "$test: print_strings is unexpected" }
    "sub main"   { pass "$test for overriding parameters in conf file" }
    default { "no output or wrong one is for $test" }
}

exec rm $conf_file

if {$user_conf_exists == "true"} {
    exec mv $user_conf_file $conf_file
}
